substitutions:
        _SONAR_PROJECT_PATH: #add sonar gcr project path here
        _SONAR_PROJECT_NAME: #project name inside sonarqube
        _SONAR_LOGIN: #add sonar login here if any?
        _SONAR_HOST_URL: #sonar host url
        _DEPLOY_INSTANCE_NAME: #instance name for deployment target
        _DEPLOY_INSTANCE_ZONE: #instance zone for deployment target
        
steps:
- name: gcr.io/$PROJECT_ID/$(_SONAR_PROJECT_PATH):latest
  entrypoint: 'bash'
  args:
    - '-c'
    - 'if [ $BRANCH_NAME != 'production' ]; then sonar-scanner -Dsonar.host.url={$_SONAR_HOST_URL} -Dsonar.login=${_SONAR_LOGIN} -Dsonar.projectKey=${_SONAR_PROJECT_NAME} -Dsonar.sources=. ; fi'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME/$BRANCH_NAME:$COMMIT_SHA', '.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/$REPO_NAME/$BRANCH_NAME:$COMMIT_SHA']
# Check  VM status *subsequent steps can make use of this value that is available in this build
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/bash
  args: 
    - '-c'
    - |
        gcloud compute instances describe ${_DEPLOY_INSTANCE_NAME} --zone ${_DEPLOY_INSTANCE_ZONE} > gce-vm-status.txt
        STATUS_VALUE="$$(grep -oP '(?<=status:).+' gce-vm-status.txt)"
        echo $$STATUS_VALUE > gce-vm-status.txt
        echo "VM status is: $$STATUS_VALUE"
# Deploy an image from Container Registry to Cloud Run        
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'compute'
  - 'instances'
  - 'update-container'
  - '${_DEPLOY_INSTANCE_NAME}'
  - '--zone'
  - '${_DEPLOY_INSTANCE_ZONE}'
  - '--container-image'
  - 'gcr.io/$PROJECT_ID/$REPO_NAME/$BRANCH_NAME:latest'
 # Timeout at 20 minute
timeout: 1200s
images: ['gcr.io/$PROJECT_ID/$REPO_NAME/$BRANCH_NAME:$COMMIT_SHA']  
  